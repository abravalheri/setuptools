[build-system]
requires = []
build-backend = "setuptools.build_meta"
backend-path = ["."]

[project]
name = "setuptools"
version = "60.0.4"
authors = [{name = "Python Packaging Authority", email = "distutils-sig@python.org"}]
description = "Easily download, build, install, upgrade, and uninstall Python packages"
readme = "README.rst"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Archiving :: Packaging",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
]
keywords = ["CPAN PyPI distutils eggs package management"]
requires-python = ">=3.7"
dependencies = []

[project.urls]
Homepage = "https://github.com/pypa/setuptools"
Documentation = "https://setuptools.pypa.io/"

[project.optional-dependencies]
testing = [
    # upstream
    "pytest >= 6",
    "pytest-checkdocs >= 2.4",
    "pytest-flake8",
    "pytest-black >= 0.3.7; python_implementation != \"PyPy\"", # workaround for jaraco/skeleton#22
    "pytest-cov",
    "pytest-mypy; python_implementation != \"PyPy\"", # workaround for jaraco/skeleton#22
    "pytest-enabler >= 1.0.1",
    # local
    "mock",
    "flake8-2020",
    "virtualenv>=13.0.0",
    "pytest-virtualenv>=1.2.7", # TODO: Update once man-group/pytest-plugins#188 is solved
    "wheel",
    "paver",
    "pip>=19.1", # For proper file:// URLs support.
    "jaraco.envs>=2.2",
    "pytest-xdist",
    "sphinx",
    "jaraco.path>=3.2.0",
    "ini2toml[lite]>=0.6.1",
    "build",
    "filelock>=3.4.0"
]
docs = [
    # upstream
    "sphinx",
    "jaraco.packaging >= 8.2",
    "rst.linker >= 1.9",
    "jaraco.tidelift >= 1.4",
    # local
    "pygments-github-lexers==0.0.5",
    "sphinx-inline-tabs",
    "sphinxcontrib-towncrier",
    "furo",
]
ssl = []
certs = []

[project.entry-points."distutils.commands"]
alias = "setuptools.command.alias:alias"
bdist_egg = "setuptools.command.bdist_egg:bdist_egg"
bdist_rpm = "setuptools.command.bdist_rpm:bdist_rpm"
build_clib = "setuptools.command.build_clib:build_clib"
build_ext = "setuptools.command.build_ext:build_ext"
build_py = "setuptools.command.build_py:build_py"
develop = "setuptools.command.develop:develop"
dist_info = "setuptools.command.dist_info:dist_info"
easy_install = "setuptools.command.easy_install:easy_install"
egg_info = "setuptools.command.egg_info:egg_info"
install = "setuptools.command.install:install"
install_egg_info = "setuptools.command.install_egg_info:install_egg_info"
install_lib = "setuptools.command.install_lib:install_lib"
install_scripts = "setuptools.command.install_scripts:install_scripts"
rotate = "setuptools.command.rotate:rotate"
saveopts = "setuptools.command.saveopts:saveopts"
sdist = "setuptools.command.sdist:sdist"
setopt = "setuptools.command.setopt:setopt"
test = "setuptools.command.test:test"
upload_docs = "setuptools.command.upload_docs:upload_docs"

[project.entry-points."setuptools.finalize_distribution_options"]
parent_finalize = "setuptools.dist:_Distribution.finalize_options"
keywords = "setuptools.dist:Distribution._finalize_setup_keywords"

[project.entry-points."distutils.setup_keywords"]
eager_resources = "setuptools.dist:assert_string_list"
namespace_packages = "setuptools.dist:check_nsp"
extras_require = "setuptools.dist:check_extras"
install_requires = "setuptools.dist:check_requirements"
tests_require = "setuptools.dist:check_requirements"
setup_requires = "setuptools.dist:check_requirements"
python_requires = "setuptools.dist:check_specifier"
entry_points = "setuptools.dist:check_entry_points"
test_suite = "setuptools.dist:check_test_suite"
zip_safe = "setuptools.dist:assert_bool"
package_data = "setuptools.dist:check_package_data"
exclude_package_data = "setuptools.dist:check_package_data"
include_package_data = "setuptools.dist:assert_bool"
packages = "setuptools.dist:check_packages"
dependency_links = "setuptools.dist:assert_string_list"
test_loader = "setuptools.dist:check_importable"
test_runner = "setuptools.dist:check_importable"
use_2to3 = "setuptools.dist:invalid_unless_false"

[project.entry-points."egg_info.writers"]
PKG-INFO = "setuptools.command.egg_info:write_pkg_info"
"requires.txt" = "setuptools.command.egg_info:write_requirements"
"entry_points.txt" = "setuptools.command.egg_info:write_entries"
"eager_resources.txt" = "setuptools.command.egg_info:overwrite_arg"
"namespace_packages.txt" = "setuptools.command.egg_info:overwrite_arg"
"top_level.txt" = "setuptools.command.egg_info:write_toplevel_names"
"depends.txt" = "setuptools.command.egg_info:warn_depends_obsolete"
"dependency_links.txt" = "setuptools.command.egg_info:overwrite_arg"

[tool.setuptools]
# disabled as it causes tests to be included #2505
include-package-data = false

[tool.setuptools.packages.find]
exclude = [
    "build*",
    "dist*",
    "docs*",
    "tests*",
    "*.tests",
    "tools*",
]
namespaces = true

[tool.distutils.egg_info]
tag-build = ".post"
tag-date = 1

[tool.distutils.sdist]
formats = "zip"

[tool.black]
skip-string-normalization = true

[tool.setuptools_scm]

[tool.pytest.enabler.black]
#addopts = "--black"

[tool.pytest.enabler.mypy]
#addopts = "--mypy"

[tool.pytest.enabler.flake8]
addopts = "--flake8"

[tool.pytest.enabler.cov]
addopts = "--cov"

[tool.pytest.enabler.xdist]
addopts = "-n auto"

[tool.towncrier]
    package = "setuptools"
    package_dir = "setuptools"
    filename = "CHANGES.rst"
    directory = "changelog.d"
    title_format = "v{version}"
    issue_format = "#{issue}"
    template = "towncrier_template.rst"
    underlines = ["-", "^"]

    [[tool.towncrier.type]]
        directory = "deprecation"
        name = "Deprecations"
        showcontent = true

    [[tool.towncrier.type]]
        directory = "breaking"
        name = "Breaking Changes"
        showcontent = true

    [[tool.towncrier.type]]
        directory = "change"
        name = "Changes"
        showcontent = true

    [[tool.towncrier.type]]
        directory = "doc"
        name = "Documentation changes"
        showcontent = true

    [[tool.towncrier.type]]
        directory = "misc"
        name = "Misc"
        showcontent = true
