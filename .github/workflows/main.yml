name: tests

on: [push, pull_request, workflow_dispatch]

jobs:
  test:
    strategy:
      matrix:
        distutils:
        - stdlib
        - local
        python:
        - pypy-3.7
        - 3.7
        - 3.8
        - 3.9
        - "3.10"
        platform:
        - ubuntu-latest
        - macos-latest
        - windows-latest
    runs-on: ${{ matrix.platform }}
    env:
      SETUPTOOLS_USE_DISTUTILS: ${{ matrix.distutils }}
      PY_IGNORE_IMPORTMISMATCH: ${{ contains(matrix.python, 'pypy') && 1 }}
      TOXENV: native
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}
      - name: Install tox
        run: |
          python -m pip install tox
      - name: Skip some Pytest plugins on PyPy
        if: contains(matrix.python, 'pypy') && matrix.distutils == 'local' && matrix.platform != 'windows-latest'
        # PyPy 3.7 imports `distutils` in its `sysconfig`, which would trigger
        # `_distutils_hack` and potentially mess imports for `pep517` (used by some plugins)
        # https://foss.heptapod.net/pypy/pypy/-/blob/8301595a71447bbe58bb61c5ecd83d93cfda5eb0/lib-python/3/sysconfig.py#L461-473
        # https://foss.heptapod.net/pypy/pypy/-/blob/8301595a71447bbe58bb61c5ecd83d93cfda5eb0/lib_pypy/_sysconfigdata.py#L5
        # https://github.com/pypa/pep517/blob/a942316305395f8f757f210e2b16f738af73f8b8/pep517/in_process/_in_process.py#L76-L86
        run: echo 'PYTEST_ADDOPTS=-p no:perf -p no:checkdocs' >> $GITHUB_ENV
      - name: Run tests
        run: tox -- --cov-report xml
      - name: Publish coverage
        if: false  # disabled for #2727
        uses: codecov/codecov-action@v1
        with:
          flags: >-  # Mark which lines are covered by which envs
            ${{ runner.os }},
            ${{ matrix.python }}

  test_cygwin:
    if: ${{ false }}  # failing #3016
    strategy:
      matrix:
        distutils:
        - stdlib
        - local
    runs-on: windows-latest
    env:
      SETUPTOOLS_USE_DISTUTILS: ${{ matrix.distutils }}
      TOXENV: native
    steps:
      - uses: actions/checkout@v2
      - name: Install Cygwin with Python and tox
        run: |
          choco install git gcc-core python38-devel python38-pip --source cygwin
          C:\\tools\\cygwin\\bin\\bash -l -x -c 'python3.8 -m pip install tox'
      - name: Run tests
        run: |
          C:\\tools\\cygwin\\bin\\bash -l -x -c 'cd $(cygpath -u "$GITHUB_WORKSPACE") && tox -- --cov-report xml'

  integration-test:
    strategy:
      matrix:
        distutils:
        - stdlib
        - local
    needs: test
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && contains(github.ref, 'refs/tags/'))
    # To avoid long times and high resource usage, we assume that:
    # 1. The setuptools APIs used by packages don't vary too much with OS or
    #    Python implementation
    # 2. Any circumstance for which the previous assumption is not valid is
    #    already tested via unit tests (or other tests not classified here as
    #    "integration")
    # With that in mind, the integration tests can run for a single setup
    runs-on: ubuntu-latest
    env:
      SETUPTOOLS_USE_DISTUTILS: ${{ matrix.distutils }}
    steps:
      - uses: actions/checkout@v2
      - name: Install OS-level dependencies
        run: |
          sudo apt-get update
          sudo apt-get install build-essential gfortran libopenblas-dev
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          # Use a release that is not very new but still have a long life:
          python-version: "3.8"
      - name: Install tox
        run: |
          python -m pip install tox
      - name: Run integration tests
        run: tox -e integration

  release:
    needs: [test, test_cygwin, integration-test]
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install tox
        run: |
          python -m pip install tox
      - name: Release
        run: tox -e release
        env:
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
